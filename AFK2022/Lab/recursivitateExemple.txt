/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
#include<iostream>
using namespace std;

int functiamea(unsigned p1, int p2, char c){
    if(c=='+'){
        return p1+p2;
    }else{
        return p1-p2;
    }
}

int recursiv(int n){
    cout<<"La inceputul functiei recursive "<<n<<endl;
    if(n==1){
        cout<<"Caz trivial "<<n<<endl;
        return 0;
    }else{
        cout<<"Inainte autoapel "<<n<<endl;
        recursiv(n-1);
        cout<<"Dupa autoapel "<<n<<endl;
    }
    cout<<"La sfarsitul functiei recursive "<<n<<endl;
}

int fact(int n){
    if(n==1){
        return 1;
    }else{
        return n*fact(n-1);
    }
}
int suma(int n){
    if(n<=0){
        return 0;
    }else{
        return n+suma(n-2);
    }
}

unsigned fib(unsigned n){
    if(n==1){
        return 1;
    }else if(n==2){
        return 1;
    }else{
        return fib(n-1)+fib(n-2);
    }
}

int hanoi(int n, int s, int d, int i){
    if (n==1){
        cout<<"Mutati de pe "<<s<<"pe "<<d<<endl;
        return 0;
    }else{
        hanoi(n-1,s,i,d);
        cout<<"Mutati de pe "<<s<<"pe "<<d<<endl;
        hanoi(n-1,i,d,s);
    }
}

int main()
{
    printf("Hello World\n");
    
    //cout<<functiamea(2,3,'-');
    
   // recursiv(5);
   
    //cout<<suma(11);
   // for(int i=1;i<=20;i++){
    //    cout<<fib(i)<<" ";
    //}
    
    hanoi(4,1,3,2);
    

    return 0;
}
